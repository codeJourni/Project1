{
	"name": "MessagesFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomersDataJSON",
						"type": "DatasetReference"
					},
					"name": "MessagesSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MessagesTable",
						"type": "DatasetReference"
					},
					"name": "MessageSink"
				}
			],
			"transformations": [
				{
					"name": "MessageSelect"
				},
				{
					"name": "AlterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          Profile as (FirstName as string, LastName as string, Email as string),",
				"          Conversations as (ConversationID as string, Messages as (DateTime as string, Sender as string, Message as string)[])[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> MessagesSource",
				"MessagesSource select(mapColumn(",
				"          ConversationID = Conversations[1].ConversationID,",
				"          CustomerID,",
				"          Sender = Conversations[1].Messages[1].Sender,",
				"          Message = Conversations[1].Messages[1].Message,",
				"          DateTime = Conversations[1].Messages[1].DateTime",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MessageSelect",
				"MessageSelect alterRow() ~> AlterRow1",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          conversation_id as string,",
				"          support_agent as integer,",
				"          message_sender as string,",
				"          message as string,",
				"          timestamp as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          conversation_id = ConversationID,",
				"          message = Message",
				"     )) ~> MessageSink"
			]
		}
	}
}